{"name":"HTTP","postlist":[{"title":"联系 Koa.js 和 requests 看 HTTP 协议中的重定向","slug":"http-protocol-redirecting","date":"2018-01-04T21:29:09.000Z","updated":"2018-04-12T19:40:29.000Z","comments":true,"path":"api/articles/http-protocol-redirecting.json","excerpt":"<p>在 HTTP 协议中，一般 3 开头的状态码，都用于表示 <code>重定向</code>：因为某些原因，例如目标网页已经存在其它网站，服务器会通知客户端访问另一个网页。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"HTTP","path":"api/tags/HTTP.json"}]},{"title":"HTTP 协议中的 URL","slug":"http-protocol-url","date":"2017-12-16T20:22:33.000Z","updated":"2018-04-12T19:40:36.000Z","comments":true,"path":"api/articles/http-protocol-url.json","excerpt":"<h1 id=\"URL-概念\"><a href=\"#URL-概念\" class=\"headerlink\" title=\"URL 概念\"></a>URL 概念</h1><blockquote>\n<p>全称 Uniform Resource Locator (统一资源定位符)，是一种 URI (Uniform Resource Identifier, 统一资源标识符)</p>\n</blockquote>\n<h1 id=\"URL-作用\"><a href=\"#URL-作用\" class=\"headerlink\" title=\"URL 作用\"></a>URL 作用</h1><p>主要用于网络资源的定位。换句话说，当你想告诉 Alice 你的服务器上有一个有趣的文件想要分享时，你就可以告诉这个文件对应的 URL。那么 Alice 就可以根据这个 URL 找到你要分享的文件。而目前 URL 更通俗的被称为网址。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"HTTP","path":"api/tags/HTTP.json"}]},{"title":"HTTP 协议中的 ETag 与 If-None-Match","slug":"http-protocol-etag-if-none-match","date":"2017-12-28T22:26:57.000Z","updated":"2018-04-12T19:40:46.000Z","comments":true,"path":"api/articles/http-protocol-etag-if-none-match.json","excerpt":"<p>ETag 是 HTTP 头的一个字段，出现在 Response Header 之中，用于标记一个资源的版本，是 HTTP 缓存策略的一种手段。</p>\n<p>软件开发常常有版本号的概念，比如 <code>1.0</code>, <code>1.1</code>, <code>2.0</code> 等等。软件使用者通常会在客户端版本落后于服务器最新版本时才会去服务器获取新的软件。</p>\n<p>这一理念也用于了浏览器缓存策略中。结合下面这张图为例，浏览器已经缓存了 <code>foo.jpg</code> 且已记录版本号为<code>1.2</code> (这个版本号由服务器生成并告诉浏览器)，那么当浏览器再次请求 <code>foo.jpg</code> 时，就会同时把版本号也放在请求头中。这样，服务器收到请求时，就知道了客户端已缓存的文件的版本。如果服务器中的 <code>foo.jpg</code> 版本也是 <code>1.2</code>，那么服务器就可以说 <code>304 Not Modified</code>，不用再将 <code>foo.jpg</code> 传给了浏览器，因此就节省了带宽。反之，如果服务器端的 <code>foo.jpg</code> 已经 <code>1.3</code> 了，那么就要将新的文件传给浏览器，也同时告诉它版本号为 <code>1.3</code>，浏览器收到后，缓存文件，并记录版本号为 <code>1.3</code>。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"HTTP","path":"api/tags/HTTP.json"}]}]}